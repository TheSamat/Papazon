Интерфейс - именованный набор сигнатур методов, необходимых в реализации. Но так же интерфейсы могут определять свойства, события, 
индексаторы, но ни конструкторы или экземплярные поля. В CRL можно определять интерфейсу статические полей, методов и конструктора, 
в CLS же не все языки их поддерживают. 

Для CLR определение интерфейса не отличается от определения типа: 
	1) определение внутренней структуры данных для интерфейса
	2) обращение к членам интерфейса может использоваться отражение
	3) может определяться на уровне файла и внутри другого типа
	4) иметь модификаторы доступа: public, internal...

Определяя интерфейс в начале его имени должна ставиться I: ICollection<T>, IEnumerable

Наследование интерфейсов работает иначе, чем наследование типов, ибо для интерфейсов это сродни присваивания наследнику сигнатур предка.
Например, ICollection<T> наследует (включает в себя) IEnumerable<T> и IEnumerable, из чего следует:
	1) Любой класс, наследующий (реализующий) ICollection<T>, так же реализирует IEnumerable<T> и IEnumerable
	2) Любой код, использующий IEnumerable<T> или IEnumerable может использовать ICollection<T>