Поле - член данных, хранящий экземпляр значимого типа или ссылку на ссылочный тип. Имеются 4 вида:

1) static		-	поле, являющееся частью типа, а не обьекта.
2) по умолчанию	-	поле, связанное с экземпляром типа.
3) readonly		-	поле дл чтения, запись которой разрешается только конструкторам (типа и экземпляра)
4) volatile		-	неустойчивое поле. Не оптимизируется компилятором, CLR или оборудованием безопасности потоков. В нем может храниться 
					только ссылочный тип или: Single, Boolean, Byte, SByte, Int16, UInt16, Int32, UInt32, Char, а так же все перечислимые 
					типы, основанные на типах: Byte, SByte, Int16, UInt16, Int32, UInt32.

Полям выделяется память динамически. Для статического в пределах обьекта типа, созданного при загрузки типа в домен приложений, что
происходит во время компиляции JIT-компилятором любого метода, ссылающегося на этот тип. Для экземплярного при создании экземпляра 
данного типа.

Поскольку память полям выделяется динамически, ссылаться на них до периода выполнения, как к константам, нельзя. Впрочем это позволяет 
им избегать проблемы управления версий, ограничений хранимых типов.

Заметка: Поля для чтения можно записать только единожды, но их значение можно изменить с помощью отражения. Стоит еще отметить, 
что для ссылочных типов нельзя менать только ссылку на обьект, а сам значения обьекта можно менять как хочется (но делать это 
категорически не рекомендуется, ибо нарушается принцип наименьшего удивления):







