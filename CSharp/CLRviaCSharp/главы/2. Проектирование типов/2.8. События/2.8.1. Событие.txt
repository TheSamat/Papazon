Событие - последний вид членов типа, уведомляющие другие обьекты о некоторых ситуациях, заранее определенные в коде
(например клик по кнопке). Чтобы определить механизм события, должны быть определены:
	1) Подписки на событие, чтобы получать уведомления
	2) Отписки от события
	3) Оповещения подписчиков об определенных ситуациях

Итого, нам нужны типы-уведомители и типы-подписчики, что очевидно

События основаны на делегатах (delegate). Они обеспечивают обратный вызов, безопасную по отношению к типам. Методы 
обратного вызова (callback methods) позволяют подписчику получать уведомления, на которые он подписался. 

Для создания типа-уведомителя надо: 
	Этап 1. Определить тип уведомления (можно воспользоваться готовым, если доп. информация не будет передаваться), который будет
			содержать в себе всю информацию о событии, нужная подписчикам
	Этап 2. Определить обьект члена-события, который будет создаваться при отлове определенном в коде ситуации и будет
			передан в метод-уведомитель
	Этап 3. Определить метод-уведомитель, принимающий событие и после уведомляющий подписчиков
	Этап 4. Определить метод, генерирующий желаемое событие, отлавливая определенные в коде ситуации

А для типа-подписчика:
	1) Делегат, поддерживающий события, на которое этот тип-подписчик будет подписан
	2) Метод подписки на событие	(можно просто конструктор, если все экземпляры априори будут подписаны на кокое-то событие)
	3) Метод отподписки на событие	(не обязательно, если это не нужно)
	4) Метод обратного вызова, котый вызовется, если случится событие, на котое он подписан.

Механизм событий:
	1) определяется экземпляр типа-уведомителя (MailManager), содержащий в себе тип-уведомления (NewMail), 
	   метод-уведомитель (OnNewMail) и метод, генерирующий события (SimulateNewMail)
	2) определяется экземпляры типов-подписчиков (Fax), имеющих метод обратного вызова ()
	3) экземпляры типов-подписчиков подписываются на событие (NewMail)
	4) метод, генерирующий события (MailManager.SimulateNewMail) отлавливает ситуацию, которая была определена в коде
	   и генерирует экземпляр события, собирающий в себя всех подписчиков
	5) метод-уведомитель (MailManager.OnNewMail) уведомляет всех подписчиков через уведомление (NewMail)
	6) подписчики реагируют на событие методом обратного вызова