Этап 3. Определение метода-уведомителя типов-подписчиков

В типе-уведомителе должен быть определен виртуальный защищенный метод, вызываемый из кода самого типа-уведомителя и его потомков 
при возникновении события. Метод должен принимать единственный параметр - объект NewMailEventArgs, являющийся типом-уведомлением. 
Реализация по умолчанию метода просто проверяет, есть ли обьекты, подписанные на получение уведомления о событии, и если так, то 
отправляет им экземпляр типа-уведомления.

    internal class MailManager {
        ...

        // Если этот класс изолированный (не может иметь потомков), то нужно сделать метод закрытым или невиртуальным,
        // а если же класс открыт - виртуальным и защищенным, это важно. Еще желательно начинать на On + имя события и void
        // Так же он НЕ защищен от многопоточной работы
        protected virtual void OnNewMail(NewMailEventArgs e) 
        {
            NewMail?.Invoke(this, e)
        }

        ...
    }

protected virtual - для наследников, которые могут переопределить метод, а если иначе - private [not virtual]
void - ибо данные передаются через тип-уведомление и дополнительно нагружать опасно и нецелесообразно
