Пока классы позволяют многократно использовать код за счет ООП, обобщения позволяют многократно использовать алгоритмы. 

C# поддерживает обобщения на уровне CLR для значимых и ссылочных типов, методов, интерфейсов и делегатов, однако 
не поддерживает обобщенные перечисляемые типы. 

Работая с обобщениями вместо конкретного типа указывается параметр типа (type parameters), который лучше именовывать 
либо как <Т>, либо начинать на <T...>. Используя реализованные обобщенния, в параметры типа передается конкретные типы, 
называемые аргументами-типами (type arguments).

Обобщения предостовляют:
	1)	Защиту исходного кода. При работе с обобщенными алгоритмами не нужен доспут к исходному коду.
	2)	Безопасность типов. Во время работы CLR использует уже определенные в коде типы так, как если бы там изночально у 
		обобщения был определеныый тип (т.е. без приведения типов) лишь с тем исключением, что проверяют совместимость типов. 
		Но при несовместимости выдают ошибку на этапе компиляции, а во время работы - соответствующее исключение.
	3)	Более простой и понятный код. Не будет никаких приведений и перегруженностей слабо отличимых друг от друга, что
		повышает читаемость и сопровождение
	4)	Повыщение производительности. Не будет перегружена память лишними перегруженными методами. А предшествующий 
		обобщениям анолог в виде object аргументов, требующий упаковки значимых обьектов и приведения остальных типов, 
		более не требуется.