Определяя параметры по умолчанию для методов, необходимо:
    1) указывать значения по умолчанию только для методов, конструкторов, параметрических свойств (индексаторов) и параметров, являющихся 
       частью определения делегатов и никуда более. В случае делегата при вызове типа делегата аргументы можно опускать.
    2) параметры по умолчанию должны быть определены после оных, т.е. нельзя чередовать параметры по умолчанию и без, а так же указывать 
       значения по умолчанию слева от оных. Единственное существующее исключение - параметр массива, помеченный словом params. Он 
       должен распологаться уже после параметров по умолчанию по тем же правилам и не может иметь значения по умолчанию.
    3) во время компиляции значения по умолчанию не должны изменяться, т.е. значения могут быть заданы только примитивным типам, а так же
       перечисляемым типам и ссылочным типам допускающих значение null. Для произвольного значимого типа значение будет экземпляром, поля 
       которого содержат нули, без разницы в способе его создания.
    4) Запрещается переименовывать параметры, ибо это влечет редактирование кода даже в тех местах, где это затруднительно или невозможно.
    5) Изменение параметров по умолчанию опасно, ибо вызывающая метод сторона обезательно должна перекомпилировать код, чтобы не передалась 
       прежнее значение. Или если задано значение по умолчанию 0 или null, то и резких причин для изменения отпадают:
// Не делайте так:
private static String MakePath(String filename = "Untitled") {
    return String.Format(@"C:\{0}.txt", filename);
}

// Используйте следующее решение:
private static String MakePath(String filename = null) 
{
// Здесь применяется оператор, поддерживающий значение null (??);
    return String.Format(@"C:\{0}.txt", filename ?? "Untitled");
}
    6) параметры к ключевыми словами out и ref не могут иметь значение по умолчанию
    7) пропуски в аргументах не осуществима, для использования значения по умолчанию необходимо использовать именованные параметры: 
       например M(1, ,DateTime.Now) нельзя писать